### Big machines, such as Nautilus and Kraken, may use
###   "EXT_LDFLAGS" if MKL, libsci, or ScaLAPACK were available;
###   "CDEFS" if other compiler were used.
###
### The installation command would be
###
###   R CMD INSTALL pbd*_*.tar.gz \
###   --configure-vars="EXT_LDFLAGS='external ldflags' CDEFS='CDEFS'"
###
### where "external ldflags" needs ScaLAPACK, BLACS, LAPACK, and BLAS;
###       "CDEFS" needs for CDEFS.

### Configurations.
EXT_LDFLAGS = @EXT_LDFLAGS@
EXT_LIBS = @EXT_LIBS@
EXT_OBJS = @EXT_OBJS@
CDEFS = @CDEFS@
CDEFS_CHECK = @CDEFS_CHECK@
SPMD_CPPFLAGS = @SPMD_CPPFLAGS@
SPMD_LDFLAGS = @SPMD_LDFLAGS@

### R Default Makeconf
MkInclude = ${R_HOME}/etc${R_ARCH}/Makeconf

### For gfortran
GFORTRAN_FLAGS = -DUSE_FC_LEN_T

### Setup R package flags and substitute by configure for ${MPI_...}.
PKG_CPPFLAGS = $(SPMD_CPPFLAGS) $(GFORTRAN_FLAGS)
PKG_CFLAGS = # -Wincompatible-pointer-types
PKG_FFLAGS = 
### Order is matter.
PKG_LIBS = $(EXT_LDFLAGS) $(FLIBS) $(SPMD_LDFLAGS)
SLAP_FFLAGS = $(R_XTRA_FFLAGS) $(FPICFLAGS) $(SHLIB_FFLAGS) $(SAFE_FFLAGS)

### Setup R source code and objects.
R_OBJS = slap_blacs.o zzz.o
R_SLAP = libslap.a
OBJECTS = $(R_OBJS) $(EXT_OBJS)
BUILD_LIBS = $(SHLIB) $(EXT_LIBS)

### For user configuration.
CC = @CC@
F77 = @FC@
FC = @FC@
USER_CONF = Makeconf
 
### Start making here.
all: Makeconf $(BUILD_LIBS)

Makeconf:
	echo "CC = @CC@" > $(USER_CONF)
	echo "F77 = @FC@" >> $(USER_CONF)
	echo "FC = @FC@" >> $(USER_CONF)
	echo "SPMD_CPPFLAGS = $(SPMD_CPPFLAGS)" >> $(USER_CONF)
	echo "SPMD_LDFLAGS = $(SPMD_LDFLAGS)" >> $(USER_CONF)
	echo "EXT_LDFLAGS = $(EXT_LDFLAGS)" >> $(USER_CONF)
	echo "CDEFS = $(CDEFS)" >> $(USER_CONF)
	echo "CDEFS_CHECK = $(CDEFS_CHECK)" >> $(USER_CONF)
	echo "PKG_CPPFLAGS = $(PKG_CPPFLAGS)" >> $(USER_CONF)
	echo "PKG_CFLAGS = $(PKG_CFLAGS)" >> $(USER_CONF)
	echo "PKG_FFLAGS = $(PKG_FFLAGS)" >> $(USER_CONF)
	echo "PKG_LIBS = $(PKG_LIBS)" >> $(USER_CONF)
	echo "SLAP_FFLAGS = $(SLAP_FFLAGS)" >> $(USER_CONF)
	echo "R_SLAP = lib${R_ARCH}/$(R_SLAP)" >> $(USER_CONF)

$(SHLIB): $(OBJECTS)

slap_blacs.o: slap_blacs.f
	$(FC) $(SLAP_FFLAGS) -c -o slap_blacs.o slap_blacs.f

### Do not delete this coming from "../configure.in".
userLibrary: $(R_SLAP)

SLmake:
	@rm -rf SLmake.inc
	echo "### Added by Makevars" > SLmake.inc
	echo "include $(MkInclude)" >> SLmake.inc
	echo "CC = @CC@" >> SLmake.inc		# overwrite MkInclude
	echo "F77 = @FC@" >> SLmake.inc		# overwrite MkInclude
	echo "FC = @FC@" >> SLmake.inc		# overwrite MkInclude
	echo "CDEFS = $(CDEFS)" >> SLmake.inc
	echo "PKG_CPPFLAGS = $(PKG_CPPFLAGS)" >> SLmake.inc
	echo "PKG_CFLAGS = $(PKG_CFLAGS)" >> SLmake.inc
	echo "PKG_FFLAGS = $(PKG_FFLAGS)" >> SLmake.inc
	echo "R_SLAP = $(R_SLAP)" >> SLmake.inc
	echo "" >> SLmake.inc
	cat SLmake.inc.org >> SLmake.inc

$(R_SLAP): SLmake
	( cd BLACS; $(MAKE) )
	( cd TOOLS; $(MAKE) )
	( cd PBLAS; $(MAKE) )
	( cd REDIST; $(MAKE) )
	( cd ScaLAPACK; $(MAKE) )

clean:
	@rm -rf *.o *.d *.rc *.so* *.dylib *.dll *.a *.lib *.inc \
	        Makedeps Makevars $(SHLIB) $(USER_CONF) $(OBJECTS)
	( cd BLACS; $(MAKE) clean )
	( cd TOOLS; $(MAKE) clean )
	( cd PBLAS; $(MAKE) clean )
	( cd REDIST; $(MAKE) clean )
	( cd ScaLAPACK; $(MAKE) clean )
