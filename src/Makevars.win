### Rscript
R_SCMD = ${R_HOME}/bin${R_ARCH_BIN}/Rscript -e

### Get MPI information from "pbdMPI". Note that Windows uses different FLAGS.
MPI_ROOT = $(shell ${R_SCMD} \
  "source('../R/get_conf.r');get.conf('MPI_ROOT','"${R_ARCH}"')")
MPI_INCLUDE = $(shell ${R_SCMD} \
  "source('../R/get_conf.r');get.conf('MPI_INCLUDE','"${R_ARCH}"')")
MPI_LIB = $(shell ${R_SCMD} \
  "source('../R/get_conf.r');get.conf('MPI_LIB','"${R_ARCH}"')")

### Default Makeconf
MkInclude = ${R_HOME}/etc${R_ARCH}/Makeconf

### Setup R package flags and substitute by configure for ${MPI_...}.
PKG_CPPFLAGS = -I"$(MPI_INCLUDE)"
PKG_CFLAGS = -w
PKG_FFLAGS = -w
### Order is matter.
PKG_LIBS = $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) "$(MPI_LIB)"

### Setup R source code and objects.
R_SRCS_C = $(wildcard *.c)
R_SRCS_F = $(wildcard *.f)
R_OBJS = $(R_SRCS_C:.c=.o) $(R_SRCS_F:.f=.o)
R_SLAP = libslap.a
OBJECTS = $(R_OBJS) $(R_SLAP)

### For user library and configuration.
USER_CONF = Makeconf
 
### Start making here.
all: Makeconf $(SHLIB) userLibrary

Makeconf:
	$(ECHO) 'MPI_ROOT = $(MPI_ROOT)' > $(USER_CONF)
	$(ECHO) 'MPI_INCLUDE = $(MPI_INCLUDE)' >> $(USER_CONF)
	$(ECHO) 'MPI_LIB = $(MPI_LIB)' >> $(USER_CONF)
	$(ECHO) 'MY_CC = $(CC)' >> $(USER_CONF)
	$(ECHO) 'MY_FC = $(FC)' >> $(USER_CONF)
	$(ECHO) 'PKG_CPPFLAGS = $(PKG_CPPFLAGS)' >> $(USER_CONF)
	$(ECHO) 'PKG_CFLAGS = $(PKG_CFLAGS)' >> $(USER_CONF)
	$(ECHO) 'PKG_FFLAGS = $(PKG_FFLAGS)' >> $(USER_CONF)
	$(ECHO) 'PKG_LIBS = $(PKG_LIBS)' >> $(USER_CONF)
	$(ECHO) 'R_SLAP = lib${R_ARCH}/$(R_SLAP)' >> $(USER_CONF)

$(SHLIB): $(OBJECTS)

userLibrary: $(SHLIB) $(R_SLAP)

$(R_OBJS): $(R_SLAP)

SLmake:
	@$(RM) -rf SLmake.inc
	$(ECHO) '### Added by Makevars' > SLmake.inc
	$(ECHO) 'MPI_ROOT = $(MPI_ROOT)' >> SLmake.inc
	$(ECHO) 'MPI_INCLUDE = $(MPI_INCLUDE)' >> SLmake.inc
	$(ECHO) 'MY_CC = $(CC)' >> SLmake.inc
	$(ECHO) 'MY_FC = $(FC)' >> SLmake.inc
	$(ECHO) 'R_SLAP = $(R_SLAP)' >> SLmake.inc
	$(ECHO) 'include $(MkInclude)' >> SLmake.inc
	@$(ECHO) '' >> SLmake.inc
	@$(CAT)  SLmake.inc.win >> SLmake.inc

$(R_SLAP): SLmake
	( cd LAPACK; $(MAKE) )
	( cd BLACS; $(MAKE) )
	( cd TOOLS; $(MAKE) )
	( cd PBLAS; $(MAKE) )
	( cd REDIST; $(MAKE) )
	( cd ScaLAPACK; $(MAKE) )

clean:
	@$(RM) -rf *.o *.d *.rc *.so* *.dll *.dylib *.a *.lib *.inc \
                Makedeps Makevars $(USER_CONF) $(SHLIB) $(OBJECTS)
	( cd LAPACK; $(MAKE) clean )
	( cd BLACS; $(MAKE) clean )
	( cd TOOLS; $(MAKE) clean )
	( cd PBLAS; $(MAKE) clean )
	( cd REDIST; $(MAKE) clean )
	( cd ScaLAPACK; $(MAKE) clean )
